First, the script starts.
It does , upon the validation of not a call to the function extension_loaded with only one argument, the string "ast", , the following : It does the exit of the script with the string "This script needs the ast extension. See https://github.com/nikic/php-ast". . 
It does , upon the validation of a check on the existence of the element at index the integer one in the array $argv , the following : It does the assignation of the element at index the integer one in the array $argv to $file and , otherwise, the following : It does the assignation of the magic constant called __FILE__ to $file. 
It does a display to the stdout of the value of a string, made of the following 3 elements : the string "Reading aloud the file " and , $file and , the string " into out.txt
" and . 
It does the assignation of an instantiation of the class toEnglish, built with only one argument, a call to the function ast\parse_code with a list of two arguments, consisting of the content of the file $file and, the assignation of the integer fifty to $version,  to $x. 
It does the assignation of a call to the method render of the object $x, with only one argument, the string "out.txt",  to $text. 
It does the write the content of $text in the file out.txt without any special option in the local file system. 
It does the display on stdout of a call to the function count with only one argument, a call to the function explode with a list of two arguments, consisting of the string " " and, $text,  concatenated with the string " words" concatenated with the constant PHP_EOL. 
It does the definition of the class named toEnglish which defines one hundred three elements. 
The class toEnglish declares two class constants : a constant named SILENT, which gets the value of boolean true and, a constant named TYPED, which gets the value of boolean false. 
The class toEnglish declares one property : a property with name ast and a default value of null. 
The class toEnglish declares one property : a property with name node and a default value of null. 
The class toEnglish declares the definition of a public method called __construct with only one argument, a parameter named ast, . It executes one expression. It does the assignation of $ast to the property ast of the object $this. 
The class toEnglish declares the definition of a public method called render without any argument. It executes one expression. It does the return of the value of the string "First, the script starts." concatenated with the constant PHP_EOL concatenated with a call to the method renderIt of the object $this, with only one argument, the property ast of the object $this,  concatenated with the string ". " concatenated with the constant PHP_EOL concatenated with the string "Then the script ends." concatenated with the constant PHP_EOL. 
The class toEnglish declares the definition of a public method called renderIt with a list of two arguments, consisting of a parameter named node and, a parameter named silent with a default value of the constant the string "TYPED" from the class self . It executes seven expressions. It does , upon the validation of the verification that $node is an integer, the following : It does , upon the validation of $silent is identical to boolean true, the following : It does the return of the value of a call to the method integer2English of the object $this, with only one argument, $node,  and , otherwise, the following : It does the return of the value of the string "the integer " concatenated with a call to the method integer2English of the object $this, with only one argument, $node,  and , upon the validation of the verification that $node is a string, the following : It does , upon the validation of $silent is identical to boolean true, the following : It does the return of the value of $node and , otherwise, the following : It does the return of the value of the string "the string "" concatenated with $node concatenated with the string """ and , upon the validation of a call to the function is_real with only one argument, $node, , the following : It does , upon the validation of $silent is identical to boolean true, the following : It does the return of the value of $node and , otherwise, the following : It does the return of the value of the string "the double "" concatenated with $node concatenated with the string """. 
It does , upon the validation of not the verification that $node is an instance of the class ast\Node, the following : It does a display to the stdout of the value of the string "Renderit called with " concatenated with the reading of the type of $node. 
It does a call to the function debug_print_backtrace with only one argument, the constant DEBUG_BACKTRACE_IGNORE_ARGS, . 
It does the assignation of a call to the method get_read_from_kind of the object $this, with only one argument, the property kind of the object $node,  to $method. 
It does the assertion of not how empty is $methodthen displays the message a string, made of the following 3 elements : the string "Missing method for " and , the property kind of the object $node and , the string " from method naming
" and . 
It does , upon the validation of not the verification that the method $method exists in the class $this, the following : It does the display of human-readable information about $node. 
It does the exit of the script with a string, made of the following 3 elements : the string "Missing method function " and , $method and , the string "($node) { }
" and . . 
It does the assignation of a call to the method $method of the object $this, with only one argument, $node,  to $text. 
It does the return of the value of $text. 
The class toEnglish declares the definition of a public method called get_read_from_kind with only one argument, a parameter named kind, . It executes four expressions. It does it declares the static variables $kinds. . 
It does , upon the validation of $kinds is identical to null, the following : It does the assignation of the element at index the string "ast" in the array the listing of all defined constants in the current PHP binary  to $kinds. 
It does the assignation of the filtering of the array $kinds with the closure with only one argument, a parameter named x, and executing the following expressions : It does the return of the value of the research of the position of the first occurrence of flags in the $x, starting at the position of 0 is identical to boolean false to $kinds. 
It does the assignation of the exchange of all the keys with their associated values in the array $kinds to $kinds. 
It does the assignation of the application of the closure with only one argument, a parameter named x, and executing the following expressions : It does the return of the value of the conversion to lowercase of the replacement of ast\ by read_ in $x to every element of the array $kinds to $kinds. 
It does the assertion of a check on the existence of the element at index $kind in the array $kinds then displays the message a string, made of the following 3 elements : the string "Missing offset " and , $kind and , the string " from method naming
" and . 
It does the return of the value of the element at index $kind in the array $kinds. 
The class toEnglish declares the definition of a public method called read_ast_stmt_list with only one argument, a parameter named node, . It executes four expressions. It does the assignation of an empty array to $return. 
It does a loop covering the property children of the object $node by checking each element in $child and executing the following statements : It does the assignation of the string "It does " concatenated with a call to the method renderIt of the object $this, with only one argument, $child,  to the appending to the array $return . 
It does the assignation of the join of all the elements in the string ". " concatenated with the constant PHP_EOL with the glue $return to $return. 
It does the return of the value of $return. 
The class toEnglish declares the definition of a public method called read_ast_const_decl with only one argument, a parameter named node, . It executes four expressions. It does the assignation of a call to the function count with only one argument, the property children of the object $node,  to $c. 
It does the assignation of $c concatenated with the string " constant" concatenated with if $c is greater than the integer one then the string "s" or else the string ""  concatenated with the string ". " to $return. 
It does a loop covering the property children of the object $node by checking each element in $children and executing the following statements : It does a call to the method renderIt of the object $this, with only one argument, $children,  is  appended with  the value of $return . 
It does the return of the value of $return. 
The class toEnglish declares the definition of a public method called read_ast_const_elem with only one argument, a parameter named node, . It executes three expressions. It does , upon the validation of the verification that the element at index the string "value" in the array the property children of the object $node is an instance of the class ast\Node, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "value" in the array the property children of the object $node,  to $value and , otherwise, the following : It does the assignation of the element at index the string "value" in the array the property children of the object $node to $value. 
It does the assignation of the string "a constant named " concatenated with the element at index the string "name" in the array the property children of the object $node concatenated with the string ", which gets the value of " concatenated with $value to $return. 
It does the return of the value of $return. 
The class toEnglish declares the definition of a public method called read_ast_binary_op with only one argument, a parameter named node, . It executes six expressions. It does the assignation of an array with twenty-two element, being the following : the value the string " plus " with the key the constant ast\flags\BINARY_ADD  ; then, the value the string " minus " with the key the constant ast\flags\BINARY_SUB  ; then, the value the string " multiplied by " with the key the constant ast\flags\BINARY_MUL  ; then, the value the string " divided by " with the key the constant ast\flags\BINARY_DIV  ; then, the value the string " concatenated with " with the key the constant ast\flags\BINARY_CONCAT  ; then, the value the string " is greater or equal to " with the key the constant ast\flags\BINARY_IS_GREATER_OR_EQUAL  ; then, the value the string " is smaller or equal to " with the key the constant ast\flags\BINARY_IS_SMALLER_OR_EQUAL  ; then, the value the string " is identical to " with the key the constant ast\flags\BINARY_IS_IDENTICAL  ; then, the value the string " is not identical to " with the key the constant ast\flags\BINARY_IS_NOT_IDENTICAL  ; then, the value the string " is smaller than " with the key the constant ast\flags\BINARY_IS_SMALLER  ; then, the value the string " is equal to " with the key the constant ast\flags\BINARY_IS_EQUAL  ; then, the value the string " is not equal to " with the key the constant ast\flags\BINARY_IS_NOT_EQUAL  ; then, the value the string " is greater than " with the key the constant ast\flags\BINARY_IS_GREATER  ; then, the value the string " binarily combined by and with " with the key the constant ast\flags\BINARY_BITWISE_AND  ; then, the value the string " binarily combined by or with " with the key the constant ast\flags\BINARY_BITWISE_OR  ; then, the value the string " binarily combined by xor with " with the key the constant ast\flags\BINARY_BITWISE_XOR  ; then, the value the string " combined by or with " with the key the constant ast\flags\BINARY_BOOL_OR  ; then, the value the string " combined by xor with " with the key the constant ast\flags\BINARY_BOOL_XOR  ; then, the value the string " combined by and with " with the key the constant ast\flags\BINARY_BOOL_AND  ; then, the value the string " modulo " with the key the constant ast\flags\BINARY_MOD  ; then, the value the string " shift bits to the left by " with the key the constant ast\flags\BINARY_SHIFT_LEFT  ; then, the value the string " shift bits to the right by " with the key the constant ast\flags\BINARY_SHIFT_RIGHT   to $operations. 
It does , upon the validation of not a check on the existence of the element at index the property flags of the object $node in the array $operations , the following : It does the display of human-readable information about $node. 
It does the assignation of the element at index the property flags of the object $node in the array $operations to $operation. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "left" in the array the property children of the object $node,  to $left. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "right" in the array the property children of the object $node,  to $right. 
It does the return of the value of $left concatenated with $operation concatenated with $right. 
The class toEnglish declares the definition of a public method called read_ast_const with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "name" in the array the property children of the object $node,  to $name. 
It does , upon the validation of the conversion to lowercase of $name is identical to the string "true", the following : It does the return of the value of the string "boolean true" and , upon the validation of the conversion to lowercase of $name is identical to the string "false", the following : It does the return of the value of the string "boolean false" and , upon the validation of the conversion to lowercase of $name is identical to the string "null", the following : It does the return of the value of the string "null" and , otherwise, the following : It does the return of the value of the string "the constant " concatenated with $name. 
The class toEnglish declares the definition of a public method called read_ast_name with only one argument, a parameter named node, . It executes one expression. It does the return of the value of the element at index the string "name" in the array the property children of the object $node. 
The class toEnglish declares the definition of a public method called read_ast_assign with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expression. 
It does the return of the value of the string "the assignation of " concatenated with $expression concatenated with the string " to " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_assign_op with only one argument, a parameter named node, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the assignation of an array with twelve element, being the following : the value the string " appended with " with the key the constant ast\flags\BINARY_CONCAT  ; then, the value the string " combined by or with " with the key the constant ast\flags\BINARY_BITWISE_OR  ; then, the value the string " combined by and with " with the key the constant ast\flags\BINARY_BITWISE_AND  ; then, the value the string " combined by xor with " with the key the constant ast\flags\BINARY_BITWISE_XOR  ; then, the value the string " added with " with the key the constant ast\flags\BINARY_ADD  ; then, the value the string " substracted with " with the key the constant ast\flags\BINARY_SUB  ; then, the value the string " multiplied with " with the key the constant ast\flags\BINARY_MUL  ; then, the value the string " divided by " with the key the constant ast\flags\BINARY_DIV  ; then, the value the string " reduced to remaining of " with the key the constant ast\flags\BINARY_MOD  ; then, the value the string " raised to the power of " with the key the constant ast\flags\BINARY_POW  ; then, the value the string " with bits shifted on the left by " with the key the constant ast\flags\BINARY_SHIFT_LEFT  ; then, the value the string " with bits shifted on the left by " with the key the constant ast\flags\BINARY_SHIFT_RIGHT   to $operations. 
It does the return of the value of $expr concatenated with the string " is " concatenated with the element at index the property flags of the object $node in the array $operations concatenated with the string " the value of " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_var with only one argument, a parameter named node with a type of ast\Node, . It executes one expression. It does , upon the validation of the verification that the element at index the string "name" in the array the property children of the object $node is an instance of the class ast\Node, the following : It does the return of the value of the string "$" concatenated with a call to the method renderIt of the object $this, with only one argument, the element at index the string "name" in the array the property children of the object $node,  and , otherwise, the following : It does the return of the value of the string "$" concatenated with the element at index the string "name" in the array the property children of the object $node. 
The class toEnglish declares the definition of a public method called read_ast_new with only one argument, a parameter named node, . It executes three expressions. It does , upon the validation of a check on the existence of the element at index the string "class" in the array the property children of the object $node , the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "class" in the array the property children of the object $node,  to $class and , otherwise, the following : It does the display of human-readable information about $node. 
It does the exit of the script with the string "Missing value for class". . 
It does , upon the validation of a check on the existence of the element at index the string "args" in the array the property children of the object $node , the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "args" in the array the property children of the object $node,  to $arguments and , otherwise, the following : It does the display of human-readable information about $node. 
It does the exit of the script with the string "Missing value for args". . 
It does the return of the value of the string "an instantiation of the class " concatenated with $class concatenated with the string ", built " concatenated with $arguments. 
The class toEnglish declares the definition of a public method called read_ast_arg_list with only one argument, a parameter named node, . It executes seven expressions. It does the assignation of a call to the function count with only one argument, the property children of the object $node,  to $c. 
It does , upon the validation of $c is identical to the integer zero, the following : It does the return of the value of the string "without any argument". 
It does , upon the validation of $c is identical to the integer one, the following : It does the return of the value of the string "with only one argument, " concatenated with a call to the method renderIt of the object $this, with only one argument, the element at index the integer zero in the array the property children of the object $node,  concatenated with the string ", ". 
It does the assignation of a call to the function count with only one argument, the property children of the object $node,  to $c. 
It does the assignation of the string "with a list of " concatenated with a call to the method integer2English of the object $this, with only one argument, $c,  concatenated with the string " argument" concatenated with if $c is greater than the integer one then the string "s" or else the string ""  concatenated with the string ", consisting of " to $return. 
It does the assignation of a call to the method renderList of the object $this, with only one argument, the property children of the object $node,  to $arguments. 
It does the return of the value of $return concatenated with $arguments. 
The class toEnglish declares the definition of a public method called read_ast_call with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $name. 
It does the assignation of the string "function_" concatenated with the conversion to lowercase of $name to $method. 
It does , upon the validation of the verification that the method $method exists in the class $this, the following : It does the return of the value of a call to the method $method of the object $this, with only one argument, the element at index the string "args" in the array the property children of the object $node,  and , otherwise, the following : It does it declares the static variables $set. . 
It does , upon the validation of not a check on the existence of the element at index $method in the array $set , the following : It does a display to the stdout of the value of a string, made of the following 3 elements : the string "    function " and , $method and , the string "($args) {
//        $a = $this->renderIt($args->children[0], self::SILENT);
//        $b = $this->renderIt($args->children[1], self::SILENT);
//        $c = $this->renderIt($args->children[2], self::SILENT);
        return ' a = '.$a;
    }

" and . 
It does the assignation of the integer one to the element at index $method in the array $set. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "args" in the array the property children of the object $node,  to $args. 
It does the assignation of the string "a call to the function " concatenated with $name concatenated with the string " " concatenated with $args to $return. 
It does the return of the value of $return. 
The class toEnglish declares the definition of a public method called read_ast_print with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $arguments. 
It does the return of the value of the string "a display to the stdout of the value of " concatenated with $arguments. 
The class toEnglish declares the definition of a public method called read_ast_method_call with only one argument, a parameter named node, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $object. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the string "method" in the array the property children of the object $node and, the constant the string "SILENT" from the class self  to $method. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "args" in the array the property children of the object $node,  to $arguments. 
It does the return of the value of the string "a call to the method " concatenated with $method concatenated with the string " of the object " concatenated with $object concatenated with the string ", " concatenated with $arguments. 
The class toEnglish declares the definition of a public method called read_ast_func_decl with only one argument, a parameter named node, . It executes five expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "name" in the array the property children of the object $node,  to $name. 
It does , upon the validation of the element at index the string "uses" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "uses" in the array the property children of the object $node,  to $uses. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "params" in the array the property children of the object $node,  to $params. 
It does the return of the value of the string "the definition of the function called "" concatenated with $name concatenated with the string "" with the parameters " concatenated with $params concatenated with the string "and executing the following expressions : " concatenated with $stmts. 
The class toEnglish declares the definition of a public method called read_ast_prop with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $object. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the string "prop" in the array the property children of the object $node and, the constant the string "SILENT" from the class self  to $property. 
It does the return of the value of the string "the property " concatenated with $property concatenated with the string " of the object " concatenated with $object. 
The class toEnglish declares the definition of a public method called read_ast_param_list with only one argument, a parameter named node, . It executes one expression. It does the return of the value of a call to the method read_ast_arg_list of the object $this, with only one argument, $node, . 
The class toEnglish declares the definition of a public method called read_ast_param with only one argument, a parameter named node, . It executes four expressions. It does , upon the validation of the element at index the string "type" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "type" in the array the property children of the object $node,  to $type. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the string "name" in the array the property children of the object $node and, the constant the string "SILENT" from the class self  to $name. 
It does , upon the validation of the element at index the string "default" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "default" in the array the property children of the object $node,  to $default. 
It does the return of the value of the string "a parameter named " concatenated with $name concatenated with if a check on the existence of $default  then the string " with a default value of " concatenated with $default or else the string ""  concatenated with if a check on the existence of $type  then the string " with a type of " concatenated with $type or else the string "" . 
The class toEnglish declares the definition of a public method called read_ast_return with only one argument, a parameter named node, . It executes three expressions. It does , upon the validation of the element at index the string "expr" in the array the property children of the object $node is identical to null, the following : It does the return of the value of the string "the return of void". 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the return of the value of the string "the return of the value of " concatenated with $expr. 
The class toEnglish declares the definition of a public method called read_ast_class with only one argument, a parameter named node, . It executes five expressions. It does , upon the validation of the element at index the string "extends" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "extends" in the array the property children of the object $node,  to $extends. 
It does , upon the validation of the element at index the string "implements" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "implements" in the array the property children of the object $node,  to $implements. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the string "name" in the array the property children of the object $node and, the constant the string "SILENT" from the class self  to $name. 
It does , upon the validation of not how empty is the property children of the object the element at index the string "stmts" in the array the property children of the object $node, the following : It does the assignation of an empty array to $stmts. 
It does a loop covering the property children of the object the element at index the string "stmts" in the array the property children of the object $node by checking each element in $child and executing the following statements : It does the assignation of the string "The class " concatenated with $name concatenated with the string " declares " concatenated with a call to the method renderIt of the object $this, with only one argument, $child,  to the appending to the array $stmts . 
It does the assignation of the constant PHP_EOL concatenated with the join of all the elements in the string ". " concatenated with the constant PHP_EOL with the glue $stmts to $stmts. 
It does the assignation of a call to the function count with only one argument, the property children of the object the element at index the string "stmts" in the array the property children of the object $node,  to $c. 
It does the return of the value of the string "the definition of the class named " concatenated with $name concatenated with if a check on the existence of $extends  then the string " which extends " concatenated with $extends concatenated with the string " " or else the string ""  concatenated with if a check on the existence of $implements  then the string " which implements " concatenated with $implements concatenated with the string " " or else the string ""  concatenated with if a check on the existence of $stmts  then the string " which defines " concatenated with a call to the method integer2English of the object $this, with only one argument, $c,  concatenated with the string " element" concatenated with if $c is greater than the integer one then the string "s" or else the string ""  concatenated with the string ". " concatenated with $stmts or else the string " which defines no elements" . 
The class toEnglish declares the definition of a public method called read_ast_name_list with only one argument, a parameter named node, . It executes eight expressions. It does the assignation of the string "" to $return. 
It does the assignation of the application of an array with two element, being the following : the value $this ; then, the value the string "renderIt"  to every element of the array the property children of the object $node to $names. 
It does , upon the validation of a call to the function count with only one argument, $names,  is equal to the integer one, the following : It does the return of the value of the element at index the integer zero in the array $names. 
It does the assignation of a call to the function array_pop with only one argument, $names,  to $last. 
It does the assignation of a call to the function array_pop with only one argument, $names,  to $secondToLast. 
It does the assignation of $secondToLast concatenated with the string " and " concatenated with $last to $last. 
It does the assignation of $last to the appending to the array $names. 
It does the return of the value of the join of all the elements in ,  with the glue $names. 
The class toEnglish declares the definition of a public method called read_ast_prop_decl with only one argument, a parameter named node, . It executes five expressions. It does the assignation of a call to the function count with only one argument, the property children of the object $node,  to $c. 
It does the assignation of a call to the method integer2English of the object $this, with only one argument, $c,  concatenated with the string " propert" concatenated with if $c is greater than the integer one then the string "ies" or else the string "y"  concatenated with the string " : " to $return. 
It does the assignation of a call to the method renderList of the object $this, with only one argument, the property children of the object $node,  to $propertyList. 
It does $propertyList is  appended with  the value of $return. 
It does the return of the value of $return. 
The class toEnglish declares the definition of a public method called read_ast_prop_elem with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the string "name" in the array the property children of the object $node and, the constant the string "SILENT" from the class self  to $name. 
It does , upon the validation of the element at index the string "default" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "default" in the array the property children of the object $node,  to $default. 
It does the return of the value of the string "a property with name " concatenated with $name concatenated with if a check on the existence of $default  then the string " and a default value of " concatenated with $default or else the string "" . 
The class toEnglish declares the definition of a public method called read_ast_method with only one argument, a parameter named node, . It executes seven expressions. It does the assignation of the property flags of the object $node binarily combined by and with the constant ast\flags\MODIFIER_PRIVATE to $private. 
It does the assignation of the property flags of the object $node binarily combined by and with the constant ast\flags\MODIFIER_PROTECTED to $protected. 
It does the assignation of the property flags of the object $node binarily combined by and with the constant ast\flags\MODIFIER_PUBLIC to $public. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the string "name" in the array the property children of the object $node and, the constant the string "SILENT" from the class self  to $name. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "params" in the array the property children of the object $node,  to $params. 
It does , upon the validation of not how empty is the property children of the object the element at index the string "stmts" in the array the property children of the object $node, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the assignation of a call to the function count with only one argument, the property children of the object the element at index the string "stmts" in the array the property children of the object $node,  to $c. 
It does the assignation of the string "It executes " concatenated with a call to the method integer2English of the object $this, with only one argument, $c,  concatenated with the string " expression" concatenated with if $c is greater than the integer one then the string "s" or else the string ""  concatenated with the string ". " concatenated with $stmts to $block and , otherwise, the following : It does the assignation of the string "It doesn't execute anything" to $block. 
It does the return of the value of the string "the definition of a " concatenated with if $private is equal to boolean true then the string "private " or else the string ""  concatenated with if $protected is equal to boolean true then the string "protected " or else the string ""  concatenated with if $public is equal to boolean true then the string "public " or else the string ""  concatenated with the string "method called " concatenated with $name concatenated with the string " " concatenated with $params concatenated with the string ". " concatenated with $block. 
The class toEnglish declares the definition of a public method called read_ast_if with only one argument, a parameter named node, . It executes four expressions. It does the assignation of the string "" to $return. 
It does a loop covering the property children of the object $node by checking each element in $child and executing the following statements : It does a call to the method renderIt of the object $this, with only one argument, $child,  concatenated with the string " and " is  appended with  the value of $return . 
It does the assignation of the reduction of the string $return, starting at zero and ending at minus the integer five to $return. 
It does the return of the value of $return. 
The class toEnglish declares the definition of a public method called read_ast_if_elem with only one argument, a parameter named node, . It executes three expressions. It does , upon the validation of the element at index the string "cond" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "cond" in the array the property children of the object $node,  to $cond. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does , upon the validation of a check on the existence of $cond , the following : It does the return of the value of the string ", upon the validation of " concatenated with $cond concatenated with the string ", the following : " concatenated with $stmts and , otherwise, the following : It does the return of the value of the string ", otherwise, the following : " concatenated with $stmts. 
The class toEnglish declares the definition of a public method called read_ast_instanceof with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "class" in the array the property children of the object $node,  to $class. 
It does the return of the value of the string "the verification that " concatenated with $expr concatenated with the string " is an instance of the class " concatenated with $class. 
The class toEnglish declares the definition of a public method called read_ast_unary_op with only one argument, a parameter named node, . It executes four expressions. It does the assignation of an array with five element, being the following : the value the string "not " with the key the constant ast\flags\UNARY_BOOL_NOT  ; then, the value the string "not " with the key the constant ast\flags\UNARY_BITWISE_NOT  ; then, the value the string "minus " with the key the constant ast\flags\UNARY_MINUS  ; then, the value the string "noscream " with the key the constant ast\flags\UNARY_SILENCE  ; then, the value the string "plus " with the key the constant ast\flags\UNARY_PLUS   to $operations. 
It does the assignation of the element at index the property flags of the object $node in the array $operations to $operation. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the return of the value of $operation concatenated with $expr. 
The class toEnglish declares the definition of a public method called read_ast_empty with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the return of the value of the string "how empty is " concatenated with $expr. 
The class toEnglish declares the definition of a public method called read_ast_encaps_list with only one argument, a parameter named node, . It executes three expressions. It does the assignation of an empty array to $return. 
It does a loop covering the property children of the object $node by checking each element in $child and executing the following statements : It does the assignation of a call to the method renderIt of the object $this, with only one argument, $child,  concatenated with the string " and " to the appending to the array $return . 
It does the return of the value of the string "a string, made of the following " concatenated with a call to the function count with only one argument, $return,  concatenated with the string " elements : " concatenated with the join of all the elements in ,  with the glue $return. 
The class toEnglish declares the definition of a public method called read_ast_exit with only one argument, a parameter named node, . It executes two expressions. It does , upon the validation of the element at index the string "expr" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the return of the value of the string "the exit of the script " concatenated with if a check on the existence of $expr  then the string "with " concatenated with $expr or else the string ""  concatenated with the string ". ". 
The class toEnglish declares the definition of a public method called read_ast_static with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does , upon the validation of the element at index the string "default" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "default" in the array the property children of the object $node,  to $default. 
It does the return of the value of the string "it declares the static variables " concatenated with $var concatenated with if a check on the existence of $default  then the string " with a default value of " concatenated with $default concatenated with the string " " or else the string ""  concatenated with the string ". ". 
The class toEnglish declares the definition of a public method called read_ast_dim with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does , upon the validation of the element at index the string "dim" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "dim" in the array the property children of the object $node,  to $dim. 
It does the return of the value of the string "the element at index " concatenated with $dim concatenated with the string " in the array " concatenated with $expr and , otherwise, the following : It does the return of the value of the string "the appending to the array " concatenated with $expr. 
The class toEnglish declares the definition of a public method called read_ast_closure with only one argument, a parameter named node, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "params" in the array the property children of the object $node,  to $params. 
It does , upon the validation of the element at index the string "uses" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "uses" in the array the property children of the object $node,  to $uses. 
It does the return of the value of the string "the closure " concatenated with $params concatenated with if a check on the existence of $uses  then the string " which uses the context variables " concatenated with $uses concatenated with the string " " or else the string ""  concatenated with the string "and executing the following expressions : " concatenated with $stmts. 
The class toEnglish declares the definition of a public method called read_ast_isset with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "a check on the existence of " concatenated with $var concatenated with the string " ". 
The class toEnglish declares the definition of a public method called read_ast_conditional with only one argument, a parameter named node, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "cond" in the array the property children of the object $node,  to $cond. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "true" in the array the property children of the object $node,  to $true. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "false" in the array the property children of the object $node,  to $false. 
It does the return of the value of the string "if " concatenated with $cond concatenated with the string " then " concatenated with $true concatenated with the string " or else " concatenated with $false concatenated with the string " ". 
The class toEnglish declares the definition of a public method called read_ast_foreach with only one argument, a parameter named node, . It executes five expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does , upon the validation of the element at index the string "key" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "key" in the array the property children of the object $node,  to $key. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "value" in the array the property children of the object $node,  to $value. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the return of the value of the string "a loop covering " concatenated with $expr concatenated with the string " by checking each element in " concatenated with if a check on the existence of $key  then $key concatenated with the string " and " or else the string ""  concatenated with $value concatenated with the string " and executing the following statements : " concatenated with $stmts concatenated with the string " ". 
The class toEnglish declares the definition of a public method called read_ast_array with only one argument, a parameter named node, . It executes five expressions. It does the assignation of a call to the function count with only one argument, the property children of the object $node,  to $c. 
It does , upon the validation of $c is identical to the integer zero, the following : It does the return of the value of the string "an empty array". 
It does the assignation of an empty array to $elements. 
It does a loop covering the property children of the object $node by checking each element in $child and executing the following statements : It does the assignation of a call to the method renderIt of the object $this, with only one argument, $child,  to the appending to the array $elements . 
It does the return of the value of the string "an array with " concatenated with a call to the method integer2English of the object $this, with only one argument, $c,  concatenated with the string " element, being the following : " concatenated with the join of all the elements in ; then,  with the glue $elements. 
The class toEnglish declares the definition of a public method called read_ast_array_elem with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "value" in the array the property children of the object $node,  to $value. 
It does , upon the validation of the element at index the string "key" in the array the property children of the object $node is not identical to null, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "key" in the array the property children of the object $node,  to $key. 
It does the return of the value of the string "the value " concatenated with $value concatenated with if a check on the existence of $key  then the string " with the key " concatenated with $key concatenated with the string " " or else the string ""  concatenated with the string " ". 
The class toEnglish declares the definition of a public method called read_ast_class_const with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "class" in the array the property children of the object $node,  to $class. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "const" in the array the property children of the object $node,  to $key. 
It does the return of the value of the string "the constant " concatenated with $key concatenated with the string " from the class " concatenated with $class concatenated with the string " ". 
The class toEnglish declares the definition of a private method called integer2English with only one argument, a parameter named integer, . It executes two expressions. It does the assignation of an instantiation of the class NumberFormatter, built with a list of two arguments, consisting of the string "en" and, the constant the string "SPELLOUT" from the class NumberFormatter  to $nf. 
It does the return of the value of a call to the method format of the object $nf, with only one argument, $integer, . 
The class toEnglish declares the definition of a public method called read_ast_class_const_decl with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the function count with only one argument, the property children of the object $node,  to $c. 
It does the assignation of a call to the method renderList of the object $this, with only one argument, the property children of the object $node,  to $constantsList. 
It does the return of the value of a call to the method integer2English of the object $this, with only one argument, $c,  concatenated with the string " class constant" concatenated with if $c is greater than the integer one then the string "s" or else the string ""  concatenated with the string " : " concatenated with $constantsList. 
The class toEnglish declares the definition of a private method called renderList with only one argument, a parameter named array, . It executes nine expressions. It does , upon the validation of a call to the function count with only one argument, $array,  is identical to the integer zero, the following : It does the return of the value of the string "". 
It does , upon the validation of a call to the function count with only one argument, $array,  is identical to the integer one, the following : It does the return of the value of a call to the method renderIt of the object $this, with only one argument, the element at index the integer zero in the array $array, . 
It does the assignation of an empty array to $elements. 
It does a loop covering $array by checking each element in $child and executing the following statements : It does the assignation of a call to the method renderIt of the object $this, with only one argument, $child,  to the appending to the array $elements . 
It does , upon the validation of a call to the function count with only one argument, $elements,  is greater than the integer three, the following : It does the assignation of the string "first, " concatenated with the element at index the integer zero in the array $elements to the element at index the integer zero in the array $elements. 
It does the assignation of a call to the function array_pop with only one argument, $elements,  to $last. 
It does the assignation of a call to the function array_pop with only one argument, $elements,  to $secondToLast. 
It does the assignation of $secondToLast concatenated with the string " and, " concatenated with if a call to the function count with only one argument, $elements,  is greater than the integer three then the string " finally, " or else the string ""  concatenated with $last to the appending to the array $elements. 
It does the return of the value of the join of all the elements in ;  with the glue $elements. 
The class toEnglish declares the definition of a public method called read_ast_pre_inc with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "the pre-incrementation of " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_pre_dec with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "the pre-decrementation of " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_cast with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the assignation of an array with seven element, being the following : the value the string "null" with the key the constant ast\flags\TYPE_NULL  ; then, the value the string "boolean" with the key the constant ast\flags\TYPE_BOOL  ; then, the value the string "long" with the key the constant ast\flags\TYPE_LONG  ; then, the value the string "double" with the key the constant ast\flags\TYPE_DOUBLE  ; then, the value the string "string" with the key the constant ast\flags\TYPE_STRING  ; then, the value the string "array" with the key the constant ast\flags\TYPE_ARRAY  ; then, the value the string "object" with the key the constant ast\flags\TYPE_OBJECT   to $casts. 
It does the return of the value of the string "It casts " concatenated with $expr concatenated with the string " as a " concatenated with the element at index the property flags of the object $node in the array $casts. 
The class toEnglish declares the definition of a public method called read_ast_static_call with only one argument, a parameter named node, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "class" in the array the property children of the object $node,  to $class. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the string "method" in the array the property children of the object $node and, the constant the string "SILENT" from the class self  to $method. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "args" in the array the property children of the object $node,  to $arguments. 
It does the return of the value of the string "a static call to the method " concatenated with $method concatenated with the string " of the class " concatenated with $class concatenated with the string ", " concatenated with $arguments. 
The class toEnglish declares the definition of a public method called read_ast_post_inc with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "the post-incrementation of " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_post_dec with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "the post-decrementation of " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_namespace with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "name" in the array the property children of the object $node,  to $namespace. 
It does the return of the value of the string "the namespace " concatenated with $namespace. 
The class toEnglish declares the definition of a public method called read_ast_use with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "name" in the array the property children of the object the element at index the integer zero in the array the property children of the object $node,  to $namespace. 
It does , upon the validation of how empty is the element at index the string "alias" in the array the property children of the object the element at index the integer zero in the array the property children of the object $node, the following : It does the assignation of a call to the function basename with only one argument, $namespace,  to $alias and , otherwise, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "alias" in the array the property children of the object the element at index the integer zero in the array the property children of the object $node,  to $alias. 
It does the return of the value of the string "the aliasing of the namespace " concatenated with $namespace concatenated with the string " with the alias " concatenated with $alias. 
The class toEnglish declares the definition of a public method called read_ast_throw with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the return of the value of the string "the throw of " concatenated with $expr. 
The class toEnglish declares the definition of a public method called read_ast_static_prop with only one argument, a parameter named node, . It executes five expressions. It does the assignation of a call to the function count with only one argument, the property children of the object $node,  to $c. 
It does the assignation of a call to the method integer2English of the object $this, with only one argument, $c,  concatenated with the string " static propert" concatenated with if $c is greater than the integer one then the string "ies" or else the string "y"  concatenated with the string " : " to $return. 
It does the assignation of a call to the method renderList of the object $this, with only one argument, the property children of the object $node,  to $propertyList. 
It does $propertyList is  appended with  the value of $return. 
It does the return of the value of $return. 
The class toEnglish declares the definition of a public method called read_ast_try with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "try" in the array the property children of the object $node,  to $try. 
It does the assignation of a call to the method renderList of the object $this, with only one argument, the property children of the object the element at index the string "catches" in the array the property children of the object $node,  to $catches. 
It does the return of the value of the string "the attempt to run " concatenated with $try concatenated with the string " while monitoring " concatenated with $catches. 
The class toEnglish declares the definition of a public method called read_ast_catch with only one argument, a parameter named node, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "class" in the array the property children of the object $node,  to $class. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the return of the value of the string "the catch of the exception " concatenated with $class concatenated with the string " in the variable " concatenated with $var concatenated with the string " with the following : " concatenated with $stmts. 
The class toEnglish declares the definition of a public method called read_ast_continue with only one argument, a parameter named node, . It executes three expressions. It does the assignation of It casts the element at index the string "depth" in the array the property children of the object $node as a long to $depth. 
It does , upon the validation of $depth is equal to the integer zero, the following : It does the assignation of the string "current" to $what and , upon the validation of $depth is equal to the integer one, the following : It does the assignation of the string "current" to $what and , upon the validation of $depth is equal to the integer two, the following : It does the assignation of the string "above" to $what and , upon the validation of $depth is equal to the integer three, the following : It does the assignation of the string "above-above" to $what and , otherwise, the following : It does the assignation of a call to the method integer2English of the object $this, with only one argument, $deep minus the integer one,  concatenated with the string " level higher" to $what. 
It does the return of the value of the string "the reset of the " concatenated with $what concatenated with the string " loop". 
The class toEnglish declares the definition of a public method called read_ast_unset with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "the destruction of " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_do_while with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "cond" in the array the property children of the object $node,  to $cond. 
It does the return of the value of the string "the loop of " concatenated with $stmts concatenated with the string " while the condition of " concatenated with $cond. 
The class toEnglish declares the definition of a public method called read_ast_while with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "cond" in the array the property children of the object $node,  to $cond. 
It does the return of the value of the string "the loop of " concatenated with $stmts concatenated with the string " as long as the condition of " concatenated with $cond. 
The class toEnglish declares the definition of a public method called read_ast_magic_const with only one argument, a parameter named node, . It executes three expressions. It does the assignation of an array with eight element, being the following : the value the string "__LINE__" with the key the constant ast\flags\MAGIC_LINE  ; then, the value the string "__FILE__" with the key the constant ast\flags\MAGIC_FILE  ; then, the value the string "__DIR__" with the key the constant ast\flags\MAGIC_DIR  ; then, the value the string "__NAMESPACE__" with the key the constant ast\flags\MAGIC_NAMESPACE  ; then, the value the string "__FUNCTION__" with the key the constant ast\flags\MAGIC_FUNCTION  ; then, the value the string "__METHOD__" with the key the constant ast\flags\MAGIC_METHOD  ; then, the value the string "__CLASS__" with the key the constant ast\flags\MAGIC_CLASS  ; then, the value the string "__TRAIT__" with the key the constant ast\flags\MAGIC_TRAIT   to $magic. 
It does the assignation of the element at index the property flags of the object $node in the array $magic to $name. 
It does the return of the value of the string "the magic constant called " concatenated with $name. 
The class toEnglish declares the definition of a public method called read_ast_for with only one argument, a parameter named node, . It executes five expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "init" in the array the property children of the object $node,  to $init. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "cond" in the array the property children of the object $node,  to $cond. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "loop" in the array the property children of the object $node,  to $loop. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the return of the value of the string "the for loop, initialized with " concatenated with $init concatenated with the string "continued with " concatenated with $cond concatenated with the string "incremented by " concatenated with $cond concatenated with the string "running the following : " concatenated with $stmts. 
The class toEnglish declares the definition of a public method called read_ast_expr_list with only one argument, a parameter named node, . It executes one expression. It does the return of the value of a call to the method renderList of the object $this, with only one argument, the property children of the object $node, . 
The class toEnglish declares the definition of a public method called read_ast_switch with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "cond" in the array the property children of the object $node,  to $cond. 
It does the assignation of a call to the method renderList of the object $this, with only one argument, the property children of the object the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does the return of the value of the string "the switch on " concatenated with $cond concatenated with the string " and the cases " concatenated with $stmts. 
The class toEnglish declares the definition of a public method called read_ast_switch_case with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "stmts" in the array the property children of the object $node,  to $stmts. 
It does , upon the validation of the element at index the string "cond" in the array the property children of the object $node is identical to null, the following : It does the return of the value of the string "when it is any other case, it does " concatenated with $stmts and , otherwise, the following : It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "cond" in the array the property children of the object $node,  to $cond. 
It does the return of the value of the string "when it compares with " concatenated with $cond concatenated with the string ", it does " concatenated with $stmts. 
The class toEnglish declares the definition of a public method called read_ast_break with only one argument, a parameter named node, . It executes three expressions. It does the assignation of It casts the element at index the string "depth" in the array the property children of the object $node as a long to $depth. 
It does , upon the validation of $depth is equal to the integer zero, the following : It does the assignation of the string "current" to $what and , upon the validation of $depth is equal to the integer one, the following : It does the assignation of the string "current" to $what and , upon the validation of $depth is equal to the integer two, the following : It does the assignation of the string "above" to $what and , upon the validation of $depth is equal to the integer three, the following : It does the assignation of the string "above-above" to $what and , otherwise, the following : It does the assignation of a call to the method integer2English of the object $this, with only one argument, $deep minus the integer one,  concatenated with the string " level higher" to $what. 
It does the return of the value of the string "the interruption of the " concatenated with $what concatenated with the string " level of execution". 
The class toEnglish declares the definition of a public method called read_ast_echo with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the return of the value of the string "the display on stdout of " concatenated with $expr. 
The class toEnglish declares the definition of a public method called read_ast_include_or_eval with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expr. 
It does the return of the value of the string "the inclusion of the file " concatenated with $expr. 
The class toEnglish declares the definition of a public method called read_ast_closure_uses with only one argument, a parameter named node, . It executes one expression. It does the return of the value of a call to the method renderList of the object $this, with only one argument, the property children of the object $node, . 
The class toEnglish declares the definition of a public method called read_ast_closure_var with only one argument, a parameter named node, . It executes one expression. It does the return of the value of the string "$" concatenated with the element at index the string "name" in the array the property children of the object $node. 
The class toEnglish declares the definition of a public method called read_ast_global with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "the declaration of a global variable " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_ref with only one argument, a parameter named node, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the return of the value of the string "the referece on " concatenated with $var. 
The class toEnglish declares the definition of a public method called read_ast_assign_ref with only one argument, a parameter named node, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "var" in the array the property children of the object $node,  to $var. 
It does the assignation of a call to the method renderIt of the object $this, with only one argument, the element at index the string "expr" in the array the property children of the object $node,  to $expression. 
It does the return of the value of the string "the assignation by reference of " concatenated with $expression concatenated with the string " to " concatenated with $var. 
The class toEnglish declares the definition of a public method called function_file_exists with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $file. 
It does the return of the value of the string "the verification of the existence of the file " concatenated with $file. 
The class toEnglish declares the definition of a public method called function_unlink with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $file. 
It does the return of the value of the string "the destruction of the file " concatenated with $file. 
The class toEnglish declares the definition of a public method called function_file_get_contents with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $file. 
It does the return of the value of the string "the content of the file " concatenated with $file. 
The class toEnglish declares the definition of a public method called function_print_r with only one argument, a parameter named args, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $expr. 
It does , upon the validation of a check on the existence of the element at index the integer one in the array the property children of the object $args , the following : It does the assignation of the string "display or return" to $what and , otherwise, the following : It does the assignation of the string "display" to $what. 
It does the return of the value of the string "the " concatenated with $what concatenated with the string " of human-readable information about " concatenated with $expr. 
The class toEnglish declares the definition of a public method called function_str_replace with only one argument, a parameter named args, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $origin. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $destination. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer two in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $haystack. 
It does the return of the value of the string "the replacement of " concatenated with $origin concatenated with the string " by " concatenated with $destination concatenated with the string " in " concatenated with $haystack. 
The class toEnglish declares the definition of a public method called function_array_map with only one argument, a parameter named args, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $callback. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $array. 
It does the assertion of not a check on the existence of the element at index the integer two in the array the property children of the object $args then displays the message missing array_map 2 args+. 
It does the return of the value of the string "the application of " concatenated with $callback concatenated with the string " to every element of the array " concatenated with $array. 
The class toEnglish declares the definition of a public method called function_strtolower with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $string. 
It does the return of the value of the string "the conversion to lowercase of " concatenated with $string. 
The class toEnglish declares the definition of a public method called function_is_integer with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $var. 
It does the return of the value of the string "the verification that " concatenated with $var concatenated with the string " is an integer". 
The class toEnglish declares the definition of a public method called function_is_string with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $var. 
It does the return of the value of the string "the verification that " concatenated with $var concatenated with the string " is a string". 
The class toEnglish declares the definition of a public method called function_gettype with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $var. 
It does the return of the value of the string "the reading of the type of " concatenated with $var. 
The class toEnglish declares the definition of a public method called function_assert with only one argument, a parameter named args, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $assert. 
It does , upon the validation of a check on the existence of the element at index the integer one in the array the property children of the object $args , the following : It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $message. 
It does the return of the value of the string "the assertion of " concatenated with $assert concatenated with if a check on the existence of $message  then the string "then displays the message " concatenated with $message or else the string "" . 
The class toEnglish declares the definition of a public method called function_method_exists with only one argument, a parameter named args, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $class. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $method. 
It does the return of the value of the string "the verification that the method " concatenated with $method concatenated with the string " exists in the class " concatenated with $class. 
The class toEnglish declares the definition of a public method called function_get_defined_constants with only one argument, a parameter named args, . It executes one expression. It does the return of the value of the string "the listing of all defined constants in the current PHP binary ". 
The class toEnglish declares the definition of a public method called function_array_filter with only one argument, a parameter named args, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $array. 
It does , upon the validation of a check on the existence of the element at index the integer one in the array the property children of the object $args , the following : It does the assignation of the string " with " concatenated with a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $closure and , otherwise, the following : It does the assignation of the string " with the default filter that removes false values" to $closure. 
It does the return of the value of the string "the filtering of the array " concatenated with $array concatenated with $closure. 
The class toEnglish declares the definition of a public method called function_strpos with only one argument, a parameter named args, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $haystack. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $needle. 
It does the assignation of if a check on the existence of the element at index the integer two in the array the property children of the object $args  then a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer two in the array the property children of the object $args and, the constant the string "SILENT" from the class self  or else the integer zero  to $offset. 
It does the return of the value of the string "the research of the position of the first occurrence of " concatenated with $needle concatenated with the string " in the " concatenated with $haystack concatenated with the string ", starting at the position of " concatenated with $offset. 
The class toEnglish declares the definition of a public method called function_array_flip with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $array. 
It does the return of the value of the string "the exchange of all the keys with their associated values in the array " concatenated with $array. 
The class toEnglish declares the definition of a public method called function_is_dir with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $dir. 
It does the return of the value of the string "the verification that " concatenated with $dir concatenated with the string " is a directory". 
The class toEnglish declares the definition of a public method called function_is_file with only one argument, a parameter named args, . It executes two expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $dir. 
It does the return of the value of the string "the verification that " concatenated with $dir concatenated with the string " is a file". 
The class toEnglish declares the definition of a public method called function_substr with only one argument, a parameter named args, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $string. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $start. 
It does , upon the validation of a check on the existence of the element at index the integer two in the array the property children of the object $args , the following : It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer two in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $end and , otherwise, the following : It does the assignation of the string "the end" to $end. 
It does the return of the value of the string "the reduction of the string " concatenated with $string concatenated with the string ", starting at " concatenated with $start concatenated with the string " and ending at " concatenated with $end. 
The class toEnglish declares the definition of a public method called function_header with only one argument, a parameter named args, . It executes four expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $headers. 
It does , upon the validation of a check on the existence of the element at index the integer one in the array the property children of the object $args , the following : It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $code. 
It does the assignation of the string ", replacing an identical and previously set HTTP header based on " concatenated with $code to $replace and , otherwise, the following : It does the assignation of the string ", without replacing an identical and previously set HTTP header" to $replace. 
It does , upon the validation of a check on the existence of the element at index the integer two in the array the property children of the object $args , the following : It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer two in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $code. 
It does the assignation of the string ", changing the HTTP code to " concatenated with $code to $httpcode and , otherwise, the following : It does the assignation of the string "without changing the HTTP code" to $httpcode. 
It does the return of the value of the string "the sending as raw HTTP header of " concatenated with $headers concatenated with $replace concatenated with $httpcode. 
The class toEnglish declares the definition of a public method called function_trim with only one argument, a parameter named args, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $var. 
It does , upon the validation of a check on the existence of the element at index the integer one in the array the property children of the object $args , the following : It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $chars and , otherwise, the following : It does the assignation of the string "tabulation, new line, line feed, null-byte and vertical tab" to $chars. 
It does the return of the value of the string "the stripping of the characters " concatenated with $chars concatenated with the string " from the beginning and the end of " concatenated with $var. 
The class toEnglish declares the definition of a public method called function_implode with only one argument, a parameter named args, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $array. 
It does , upon the validation of a check on the existence of the element at index the integer one in the array the property children of the object $args , the following : It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $glue and , otherwise, the following : It does the assignation of the string "empty string" to $glue. 
It does the return of the value of the string "the join of all the elements in " concatenated with $array concatenated with the string " with the glue " concatenated with $glue. 
The class toEnglish declares the definition of a public method called function_strip_tags with only one argument, a parameter named args, . It executes three expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $var. 
It does , upon the validation of a check on the existence of the element at index the integer one in the array the property children of the object $args , the following : It does the assignation of the string "allowing only " concatenated with a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $allowing and , otherwise, the following : It does the assignation of the string "allowing absolutely no tags" to $allowing. 
It does the return of the value of the string "the strip of HTML and PHP tags from " concatenated with $var concatenated with the string " " concatenated with $allowing. 
The class toEnglish declares the definition of a public method called function_file_put_contents with only one argument, a parameter named args, . It executes five expressions. It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer zero in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $file. 
It does the assignation of a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer one in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $data. 
It does , upon the validation of a check on the existence of the element at index the integer two in the array the property children of the object $args , the following : It does the assignation of the string "with the option of " concatenated with a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer two in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $flags and , otherwise, the following : It does the assignation of the string "without any special option" to $flags. 
It does , upon the validation of a check on the existence of the element at index the integer three in the array the property children of the object $args , the following : It does the assignation of the string "in the contexted file-system " concatenated with a call to the method renderIt of the object $this, with a list of two arguments, consisting of the element at index the integer three in the array the property children of the object $args and, the constant the string "SILENT" from the class self  to $context and , otherwise, the following : It does the assignation of the string "in the local file system" to $context. 
It does the return of the value of the string "the write the content of " concatenated with $data concatenated with the string " in the file " concatenated with $file concatenated with the string " " concatenated with $flags concatenated with the string " " concatenated with $context. 
It does the definition of the class named Sentence which defines ten elements. 
The class Sentence declares one property : a property with name subject. 
The class Sentence declares one property : a property with name verb. 
The class Sentence declares one property : a property with name complement. 
The class Sentence declares one property : a property with name indirectComplement. 
The class Sentence declares the definition of a public method called __construct without any argument. It doesn't execute anything. 
The class Sentence declares the definition of a public method called addSubject with only one argument, a parameter named subject, . It executes one expression. It does the assignation of $subject to the property subject of the object $this. 
The class Sentence declares the definition of a public method called addVerb with only one argument, a parameter named verb, . It executes one expression. It does the assignation of $verb to the property verb of the object $this. 
The class Sentence declares the definition of a public method called addComplement with only one argument, a parameter named complement, . It executes one expression. It does the assignation of $complement to the property complement of the object $this. 
The class Sentence declares the definition of a public method called addIndirectComplement with a list of two arguments, consisting of a parameter named preposition and, a parameter named complement. It executes one expression. It does the assignation of $complement to the element at index It casts $preposition as a string in the array the property indirectComplements of the object $this. 
The class Sentence declares the definition of a public method called __toString without any argument. It executes four expressions. It does the assignation of a call to the function each with only one argument, the property indirectComplements of the object $this,  to an array with two element, being the following : the value $preposition ; then, the value $complement . 
It does the assignation of $preposition concatenated with the string " " concatenated with $complement to $indirectComplement. 
It does a call to the method setOption of the object the property verb of the object $this, with a list of two arguments, consisting of the constant the string "SUBJECT" from the class the property verb of the object $this  and, the constant the string "IT" from the class the property verb of the object $this . 
It does the return of the value of a call to the function ucfirst with only one argument, the property subject of the object $this,  concatenated with the string " " concatenated with the property verb of the object $this concatenated with the string " " concatenated with the property complement of the object $this concatenated with the string " " concatenated with $indirectComplement concatenated with the string ".". 
It does the definition of the class named Word which defines fifteen elements. 
The class Word declares one class constant : a constant named UNKNOWN, which gets the value of 0. 
The class Word declares one class constant : a constant named WORD, which gets the value of 1. 
The class Word declares one class constant : a constant named VERBE, which gets the value of 2. 
The class Word declares one class constant : a constant named ADJECTIVE, which gets the value of 3. 
The class Word declares one class constant : a constant named NUMERAL, which gets the value of 4. 
The class Word declares one class constant : a constant named PREPOSITION, which gets the value of 5. 
The class Word declares one class constant : a constant named NUMBER, which gets the value of number. 
The class Word declares one class constant : a constant named PLURAL, which gets the value of plural. 
The class Word declares one class constant : a constant named SINGLE, which gets the value of single. 
The class Word declares one property : a property with name options and a default value of an array with one element, being the following : the value the constant the string "UNKNOWN" from the class self  with the key the constant the string "NUMBER" from the class self   . 
The class Word declares one property : a property with name word and a default value of null. 
The class Word declares the definition of a public method called __construct with only one argument, a parameter named word, . It executes one expression. It does the assignation of the conversion to lowercase of It casts $word as a string to the property word of the object $this. 
The class Word declares the definition of a public method called setOption with a list of two arguments, consisting of a parameter named type and, a parameter named value. It executes one expression. It does the assignation of $value to the element at index $type in the array the property options of the object $this. 
The class Word declares the definition of a public method called getOption with only one argument, a parameter named type, . It executes one expression. It does the return of the value of the element at index $type in the array the property options of the object $this. 
The class Word declares the definition of a public method called __toString without any argument. It executes one expression. It does the return of the value of the property word of the object $this. 
It does the definition of the class named Noun which extends Word  which defines one element. 
The class Noun declares the definition of a public method called __toString without any argument. It executes one expression. It does the return of the value of the property word of the object $this concatenated with if the element at index the constant the string "NUMBER" from the class self  in the array the property getOption of the object $this is identical to the constant the string "PLURAL" from the class self  then the string "s" or else the string "" . 
It does the definition of the class named Adjective which extends Word  which defines one element. 
The class Adjective declares the definition of a public method called __toString without any argument. It executes one expression. It does the return of the value of It casts the property word of the object $this as a string. 
It does the definition of the class named Preposition which extends Word  which defines no elements. 
It does the definition of the class named Pronoun which extends Word  which defines no elements. 
It does the definition of the class named Verb which extends Word  which defines eleven elements. 
The class Verb declares one class constant : a constant named I, which gets the value of 1. 
The class Verb declares one class constant : a constant named YOU, which gets the value of 2. 
The class Verb declares one class constant : a constant named HE, which gets the value of 3. 
The class Verb declares one class constant : a constant named SHE, which gets the value of 4. 
The class Verb declares one class constant : a constant named IT, which gets the value of 5. 
The class Verb declares one class constant : a constant named WE, which gets the value of 6. 
The class Verb declares one class constant : a constant named THEY, which gets the value of 7. 
The class Verb declares one class constant : a constant named INFINITIVE, which gets the value of 8. 
The class Verb declares one class constant : a constant named SUBJECT, which gets the value of 9. 
The class Verb declares the definition of a public method called __construct with only one argument, a parameter named word, . It executes two expressions. It does a static call to the method __construct of the class parent, with only one argument, $word, . 
It does the assignation of the constant the string "INFINITIVE" from the class self  to the element at index the constant the string "SUBJECT" from the class self  in the array the property options of the object $this. 
The class Verb declares the definition of a public method called __toString without any argument. It executes one expression. It does , upon the validation of the element at index the constant the string "SUBJECT" from the class self  in the array the property options of the object $this is identical to the constant the string "INFINITIVE" from the class self , the following : It does the return of the value of the string "to " concatenated with the property word of the object $this and , upon the validation of the element at index the constant the string "SUBJECT" from the class self  in the array the property options of the object $this is identical to the constant the string "IT" from the class self  combined by or with the element at index the constant the string "SUBJECT" from the class self  in the array the property options of the object $this is identical to the constant the string "HE" from the class self  combined by or with the element at index the constant the string "SUBJECT" from the class self  in the array the property options of the object $this is identical to the constant the string "SHE" from the class self , the following : It does the return of the value of the property word of the object $this concatenated with the string "s" and , otherwise, the following : It does the return of the value of the property word of the object $this concatenated with the string "s". 
Then the script ends.
